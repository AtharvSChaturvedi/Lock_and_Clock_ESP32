//ESP32 Clock System

#include <WiFi.h>
#include "time.h"
#include "esp_sntp.h"
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27, 16, 2);

const char *ssid = "Atharv's Galaxy F22";
const char *password = "aiik1810";

const char *ntpServer1 = "pool.ntp.org";
const char *ntpServer2 = "time.nist.gov";
const long gmtOffset_sec = 19800; // 5 hours 30 minutes ahead of GMT in seconds (5 * 3600 + 30 * 60)
const int daylightOffset_sec = 0; // No daylight saving time for India

void printLocalTime() {
  struct tm timeinfo;
  if (!getLocalTime(&timeinfo)) {
    Serial.println("No time available (yet)");
    return;
  }
  Serial.println(&timeinfo, "%A, %B %d %Y %H:%M:%S");
  lcd.clear();
  lcd.setCursor(0,0);

  lcd.print(&timeinfo, "%B %d %Y");
  lcd.setCursor(0,1);

  lcd.print(&timeinfo, "%H:%M");

}

// Callback function (gets called when time adjusts via NTP)
void timeavailable(struct timeval *t) {
  Serial.println("Got time adjustment from NTP!");
  printLocalTime();
}

void setup() {
  Serial.begin(115200);
  lcd.init();                       // Initialize the LCD
  lcd.backlight();

  // First step is to configure WiFi STA and connect in order to get the current time and date.
  Serial.printf("Connecting to %s ", ssid);
  WiFi.begin(ssid, password);

  // NTP server address could be acquired via DHCP
  esp_sntp_servermode_dhcp(1);  // (optional)

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println(" CONNECTED");

  // Set notification call-back function
  sntp_set_time_sync_notification_cb(timeavailable);

  // Configure the NTP servers and timezone offset
  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer1, ntpServer2);
}

void loop() {
  delay(1000);
  printLocalTime();  // It will take some time to sync time
}
