//Lock System

#include <ESP32Servo.h>
#include <Wire.h>
#include <SPI.h>
#include <MFRC522.h>

#define SS_PIN 5        // SS pin for MFRC522
#define RST_PIN 22      // RST pin for MFRC522
#define LOCK_LED 14     // Pin for "locked" LED
#define OPEN_LED 12     // Pin for "open" LED

String UID = " "; //Write the UID of your MFRC522 Module
byte lock = 0;

Servo servo;
MFRC522 rfid(SS_PIN, RST_PIN);

void setup() {
  Serial.begin(115200); // Initialize serial communication
  servo.attach(13);     // Attach servo to GPIO 13
  servo.write(70);      // Initial servo position (locked)
  pinMode(LOCK_LED, OUTPUT); // Initialize LED pins as outputs
  pinMode(OPEN_LED, OUTPUT);
  digitalWrite(LOCK_LED, HIGH); // Turn on "locked" LED initially
  digitalWrite(OPEN_LED, LOW);  // Turn off "open" LED initially
  SPI.begin();          // Initialize SPI for RFID
  rfid.PCD_Init();      // Initialize RFID reader
}

void loop() {
  if (!rfid.PICC_IsNewCardPresent())
    return;
  if (!rfid.PICC_ReadCardSerial())
    return;

  Serial.print("NUID tag is :");
  String ID = "";
  for (byte i = 0; i < rfid.uid.size; i++) {
    ID.concat(String(rfid.uid.uidByte[i] < 0x10 ? " 0" : " "));
    ID.concat(String(rfid.uid.uidByte[i], HEX));
    delay(300);
  }
  ID.toUpperCase();

  if (ID.substring(1) == UID && lock == 0) {
    servo.write(70);             // Move servo to "locked" position
    digitalWrite(LOCK_LED, HIGH); // Turn on "locked" LED
    digitalWrite(OPEN_LED, LOW);  // Turn off "open" LED
    delay(1500);
    lock = 1;
  } else if (ID.substring(1) == UID && lock == 1) {
    servo.write(160);           // Move servo to "open" position
    digitalWrite(LOCK_LED, LOW); // Turn off "locked" LED
    digitalWrite(OPEN_LED, HIGH);// Turn on "open" LED
    delay(1500);
    lock = 0;
  }
}
